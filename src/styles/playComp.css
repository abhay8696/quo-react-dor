.playComp, .oneOnOneComp{
    /* padding: 1rem; */
    display: flex;
    box-sizing: border-box;
}
.offlineComp{
    flex: 1;
    background-color: rgba(255, 255, 255, 0.048);
    border-radius: 1rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
}
.inputFormOffline input{
    margin: 0;
}
.inputFormOffline{
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
}
.offlineBar{
    width: 100%;
    text-align: left;
    display: flex;
    align-items: center;
    justify-content: space-between;
}
.closeOfflineComp{
    padding: 0.1rem 0.5rem;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 900;
    cursor: pointer;
}
.inputForm{
    flex: 1;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
}
.loadingDiv{
    position: absolute;
    top: 40%;
    display: flex;
    flex-direction: column;
    align-items: center;
}
.loadingDiv > svg{
    font-size: 5rem;
    font-weight: 100;
}
.myInfo, .opponentInfo{
    color: 'white';
}
.oppoInfo{
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    /* color: #8b0000; */
}
.meInfo{
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    /* color: #da6d25; */
}
.oppoCircle, .myCircle{
    border-radius: 50%;
}
.oppoCircle{
    background-color: #8b0000;
    margin-right: 0.2rem;
}
.myCircle{
    background-color: #da6d25;
    margin-left: 0.2rem;
}
.opponentInfo, .myInfo{
    display: flex;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;
}
.opponentInfo{
    align-items: flex-start;
}
.myInfo{
    align-items: flex-end;
}
.myInfo2{
    position: relative;
}
.giveUp{
  position: fixed;
  right: 0.5rem;
  bottom: 0.5rem;
  font-size: 1rem;
  z-index: 20;
  background-color: rgb(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
}
.infoName{
    font-size: 1.2rem;
    /* font-weight: 500; */
}
.wallInfo{
    font-size: 0.9rem;
    font-weight: 300;
}
.insertWall{
    /* border: 1px solid #fff;
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    cursor: pointer; */
}
.insertWall:hover{
    /* border: 1px solid #000;
    color: #000;
    background-color: #fff; */
}
.infoName{
    display: flex;
    align-items: center;
}
.turnIndicator1, .turnIndicator1Dummy, .turnIndicator2, .turnIndicator2Dummy{
    width: 0;
    height: 0;
    border-top: 6px solid transparent;
    border-bottom: 6px solid transparent;
}
.turnIndicator1, .turnIndicator1Dummy{
    border-left: 12px solid #da6d25;
    animation-name: indicatorAnimation1;
    animation-duration: 2000ms;
    animation-iteration-count: infinite;
}
.turnIndicator2, .turnIndicator2Dummy{ 
    border-right: 12px solid #8b0000;
    animation-name: indicatorAnimation2;
    animation-duration: 2000ms;
    animation-iteration-count: infinite;
}
.turnIndicatorDummy{
    width: 12px;
}
/* mobile */
@media only screen and (max-width: 600px) {
    .playComp, .oneOnOneComp{
        flex: 1;
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
        box-sizing: border-box;
        margin-top: 3rem;
    }
    #infoName2Offline{
        flex-direction: row-reverse;
    }
    #infoName2Offline .turnIndicator2,  #infoName2Offline .turnIndicator2Dummy{
        border-left: 12px solid #8b0000;
        border-right: none;
        animation-name: indicatorAnimation1;
    }
    .offlineComp{
        margin: 0 0.5rem;
        padding: 0.5rem;
        max-height: 50vh;
    }
    .inputFormOffline input{
        /* background-color: rebeccapurple; */
        width: 50vw;
    }
    .offlineBar{
        font-size: 1.2rem;
    }
    .myInfo, .opponentInfo{
        width: 100%;
    }
    .opponentInfo{
        padding: 0 0.5rem;
        justify-content: space-between;
        align-items: center;
    }
    .myInfo{
        /* justify-content: flex-end; */
        padding: 0 0.5rem;
        justify-content: space-between;
        align-items: center;
    }
    .oppoCircle, .myCircle{
        width: 2.5rem;
        height: 2.5rem;
    }
    .myInfo2, .opponentInfo2{
        display: flex;
    }
    #opponentInfoOFFLINE .oppoInfo, #opponentInfoOFFLINE .insertWall{
        transform: rotate(180deg);
    }
}
/* desktop */
@media only screen and (min-width: 601px) {
    .playComp{
        justify-content: center;
        width: 100%;
    }
    .offlineComp{
        margin-left: 1rem;
        padding: 1rem;
    }
    .offlineBar{
        font-size: 1.5rem;
    }
    .oneOnOneComp{
        display: flex;
        justify-content: space-around;
        align-items: center;
        width: 100vw;
    }
    #opponentInfoOFFLINE, #myInfoOFFLINE {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-end;
        height: 100%;
        margin-bottom: 5rem;
    }
    .oppoCircle, .myCircle{
        width: 2rem;
        height: 2rem;
    }
    .opponentInfo, .myInfo{
        /* width: 10%; */
        margin: 0.3rem auto;
        padding: 0.5rem;
    }
    .opponentInfo{
        align-self: flex-start;
    }
    .myInfo{
        align-self: flex-end;
    }
    #myInfoOnline .myInfo2{
        margin-bottom: 2.5rem;
    }
    .oneOnOneComp > .opponentInfo, .oneOnOneComp > .myInfo{
        align-self: auto;
    }
    .insertWall{
        /* position: absolute; */
        /* margin: 1rem 0; */
        font-size: 0.8rem;
    }
    .opponentInfo2, .myInfo2{
        display: flex;
        align-items: center;
        margin: 1rem;
    }
    #opponentInfoOFFLINE > .oppoCircle, #myInfoOFFLINE > .myCircle{
        width: 1rem;
        height: 1rem;
    }
}
.turnIndicator1Dummy, .turnIndicator2Dummy{
    opacity: 0;
}
.insertWall-disabled{
    opacity: 0.2;
    cursor:default;
}
.insertWall-disabled:hover{
    background-color: rgba(255, 255, 255, 0.301);
    border: 1px solid gba(255, 255, 255, 0.301) !important;
    cursor: default;
}


@keyframes indicatorAnimation1 {
    0%{
        transform: translate(0px);
    }
    50%{
        transform: translate(-8px);
    }
    100%{
        transform: translate(0px);
    }
}
@keyframes indicatorAnimation2 {
    0%{
        transform: translate(0px);
    }
    50%{
        transform: translate(8px);
    }
    100%{
        transform: translate(0px);
    }
}
